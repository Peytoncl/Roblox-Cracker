<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAYAAAAMAAAAFAAAABwAAAAmAAAAMAAA
        ADoAAABCAAAASgAAAFAAAABWAAAAXAAAAGIAAABrAAAAdQAAAIAAAACNAAAAmQAAAKQAAACjAAAAgQAA
        AFgAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAABAAAAAYAAAAKAAAAEAAAABYAAAAfAAAAKQAA
        ADQAAAA/AAAASQAAAFMAAABcAAAAYwAAAGgAAABxAAAAfwAAAIUAAACSAAAAuwAAANkAAADpAAAA9QAA
        APgAAADnAAAAkAAAADAAAAABAAAAAAAAAAAAAAABAAAAAwAAAAUAAAAKAAAADwAAABYAAAAfAAAAKQAA
        ADUAAABCAAAATwAAAGcAAACMAAAAqgAAAMEAAADDAAAAxgAAANQAAADpAAAA6AAAAOsAAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADTAAAAQQAAAAUAAAAAAAAAAQAAAAMAAAAGAAAADAAAABQAAAAeAAAAKgAA
        ADcAAABEAAAAUwAAAG4AAACjAAAA2wAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMMAAABBAAAADAAAAAEAAAACAAAABgAAAAwAAAAWAAAAIwAA
        ADMAAABCAAAAVgAAAG8AAACXAAAA3AAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADhAAAAcgAAADcAAAASAAAAAgAAAAQAAAAKAAAAFQAA
        ACQAAAA3AAAAVAAAAI8AAAC+AAAA4wAAAPcAAAD/AAAA/wAAAP8AAAD/AAAA/wQEBP88PDz/VFRU/wMD
        A/8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAAzAAAAG8AAAA/AAAALAAAABQAAAAEAAAACAAA
        ABEAAAAgAAAANQAAAFUAAAC1AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wMDA/8xMTH/lpaW/+zs
        7P/h4eH/LCws/wAAAP8AAAD/AAAA/wAAAPwAAADzAAAA3QAAAKAAAABeAAAAPwAAAC0AAAAfAAAAEQAA
        AAYAAAALAAAAGAAAACwAAABHAAAAogAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wICAv8qKir/jo6O/+bm
        5v////////////////+SkpL/AwMD/wAAAP8AAAD2AAAAuwAAAI8AAABtAAAATwAAADsAAAAqAAAAHAAA
        ABIAAAAMAAAACAAAABAAAAAgAAAAOAAAAGMAAADfAAAA/wAAAP8AAAD/AAAA/wEBAf8jIyP/g4OD/9/f
        3////////////////////////////+np6f85OTn/AAAA/wAAANkAAACGAAAAZQAAAEsAAAA2AAAAJQAA
        ABkAAAAPAAAACQAAAAcAAAALAAAAFAAAACcAAABCAAAAiQAAAPkAAAD/AAAA/wAAAP8dHR3/enp6/9ra
        2v/+/v7//////////////////////////////////////6Ghof8GBgb/AAAA0gAAAHYAAABTAAAANwAA
        ACMAAAAWAAAADQAAAAcAAAAEAAAAAgAAAA4AAAAYAAAALQAAAEsAAACvAAAA/wAAAP8YGBj/bm5u/9PT
        0//9/f3/////////////////////////////////////////////////7+/v/0VFRf8AAADVAAAAbgAA
        AEgAAAAsAAAAGQAAAA0AAAAHAAAAAwAAAAEAAAABAAAAEAAAABsAAAAyAAAAVAAAAMYSEhL/Y2Nj/8vL
        y//8/Pz/////////////////////////////////////////////////////////////////rq6u/w0N
        DdUAAABsAAAARQAAACkAAAAVAAAACgAAAAQAAAABAAAAAAAAAAAAAAARAAAAHAAAADQAAABbAAAA1Vxc
        XP/4+Pj/////////////////////////////////////////////////////////////////////////
        ///z8/P/X19f3QAAAHQAAABKAAAALAAAABcAAAALAAAABAAAAAEAAAAAAAAAAAAAABEAAAAdAAAANQAA
        AFwAAADVHR0d/8/Pz///////////////////////////////////////6enp/6ampv/i4uL/////////
        ///////////////////IyMjvHx8fiAAAAFQAAAA2AAAAHwAAABAAAAAHAAAAAwAAAAEAAAAAAAAAEQAA
        ABwAAAA0AAAAWgAAANIAAAD/ampq//z8/P///////////////////////////83NzP85OTn/BAQE/319
        ff/+/v7///////////////////////r6+v+CgoK8AAAAZgAAAEUAAAArAAAAGQAAAA4AAAAHAAAAAwAA
        AAIAAAAQAAAAGgAAADIAAABUAAAAwQAAAP8VFRX/xcXF////////////////////////////1tbW/yEh
        If8AAAD/OTk5/+rq6v///////////////////////////9PT0/IpKSmTAAAAWAAAAD4AAAAnAAAAGAAA
        AA4AAAAIAAAABQAAAA4AAAAYAAAALgAAAE0AAACoAAAA/wAAAP9cXFz/+Pj4////////////////////
        ////////j4+P/2hoaP/Pz8///f39////////////////////////////+/v7/35+ftwAAACAAAAAVAAA
        ADwAAAAoAAAAGQAAABAAAAAMAAAADQAAABcAAAArAAAASgAAAIsAAAD1AAAA/w4ODv+4uLj/////////
        ///////////////////5+fn/+/v7////////////////////////////////////////////09PT/yIi
        It4AAACFAAAAUwAAAD0AAAAqAAAAHQAAABYAAAANAAAAFgAAACoAAABJAAAAcwAAANkAAAD/AAAA/05O
        Tv/z8/P//////////////////////////////////////////////////////////////////////+bm
        5v+Ojo7/FhYW/wAAAOUAAACLAAAAUwAAAD4AAAAuAAAAJQAAAA4AAAAYAAAALAAAAEsAAABvAAAAywAA
        AP8AAAD/CgoK/6urq////////////////////////////////////////////////////////////+zs
        7P6ampr/MzMz/wMDA/8AAAD/AAAA/wAAAOoAAACYAAAAWwAAAD8AAAA2AAAAEgAAABwAAAAyAAAATwAA
        AH8AAADpAAAA/wAAAP8AAAD9RkZG6/Ly8vr///////////////////////////////////////////Hx
        8f6zs7PpRkZG1wUFBfUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPkAAADNAAAAbAAAAEIAAAAYAAAAIwAA
        ADoAAABYAAAAsgAAAP8AAAD/AAAA/wAAAO0HBwe3srKy4P////////////////////////////////T0
        9P+tra3/RUVF/gkJCc8AAACqAAAAuQAAAO4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADBAAAATQAA
        AB4AAAArAAAAQQAAAHoAAADuAAAA/wAAAP8AAAD/AAAAzAAAAJVNTU2x7+/v9v////////////////j4
        +P64uLj/TExM/woKCv8AAAD/AAAA5QAAAKIAAACQAAAAnwAAANwAAAD4AAAA/wAAAP8AAAD/AAAA/gAA
        AK8AAABIAAAAJAAAADEAAABLAAAAuwAAAP8AAAD/AAAA/wAAAO4AAACWAAAAfQQEBIqjo6Pc//////n5
        +f+/v7//W1tb8w4ODvQAAAD/AAAA/wAAAP8AAAD6AAAAsgAAAIIAAAB0AAAAdwAAAIoAAAC2AAAAzQAA
        ALMAAACMAAAATwAAADkAAAAoAAAAMwAAAGwAAADvAAAA/wAAAP8AAADyAAAAmAAAAGYAAABmAAAAczU1
        Ncutra3/YWFh/xAQEP8AAADuAAAA3AAAAP4AAAD/AAAA/wAAAP8AAADgAAAAggAAAGUAAABXAAAATQAA
        AEwAAABLAAAAQAAAADUAAAAtAAAAKQAAACcAAAAvAAAAiQAAAP8AAAD/AAAA9wAAAKAAAABXAAAATwAA
        AFEAAABdAwMDsAoKCv8BAQH/AAAA/wAAAOoAAADDAAAA9wAAAP8AAAD/AAAA/wAAAPsAAACbAAAAWwAA
        AEcAAAA5AAAAMQAAACwAAAAnAAAAIgAAABwAAAAZAAAAIAAAACkAAABjAAAA6wAAAPsAAAChAAAATAAA
        AD8AAAA5AAAAPQAAAEoAAACNAAAA+wAAAP8AAAD/AAAA3gAAAKMAAADjAAAA/wAAAP8AAAD/AAAA/wAA
        AL4AAABZAAAAPgAAACsAAAAgAAAAGQAAABUAAAASAAAADgAAAA0AAAAVAAAAIAAAAC0AAABsAAAAfgAA
        AEAAAAAxAAAAKgAAACYAAAArAAAANwAAAHMAAAD2AAAA/wAAAP4AAAC9AAAAggAAALoAAAD9AAAA/wAA
        AP8AAAD/AAAA3QAAAF8AAAA5AAAAIwAAABYAAAAOAAAACgAAAAgAAAAGAAAABQAAAAsAAAAVAAAAHAAA
        ACAAAAAjAAAAIwAAAB4AAAAZAAAAGAAAAB0AAAAoAAAAQQAAAI8AAADGAAAAtQAAAGsAAABlAAAAewAA
        ANcAAAD/AAAA/wAAAP8AAAD2AAAAdwAAADMAAAAfAAAAEAAAAAgAAAAFAAAAAwAAAAIAAAACAAAABAAA
        AAwAAAAQAAAAEwAAABQAAAATAAAAEAAAAA0AAAANAAAAEgAAABoAAAAlAAAALwAAAD4AAABAAAAAQQAA
        AEsAAABYAAAAigAAAPEAAAD/AAAA/wAAAPYAAAB3AAAALwAAABwAAAAOAAAABgAAAAIAAAABAAAAAAAA
        AAAAAAABAAAABgAAAAgAAAAJAAAACgAAAAkAAAAIAAAABwAAAAcAAAAKAAAAEAAAABcAAAAeAAAAIwAA
        ACcAAAAsAAAANQAAAEQAAABYAAAApAAAAOQAAADyAAAArQAAAEkAAAAsAAAAGQAAAAwAAAAFAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAABAAAAAUAAAAFAAAABQAAAAQAAAADAAAABAAAAAYAAAALAAAAEAAA
        ABUAAAAZAAAAHAAAACEAAAAqAAAAOAAAAEsAAABcAAAAeAAAAIMAAABbAAAAPwAAACkAAAAVAAAACAAA
        AAIAAAAAAAAAAAAAAAAAAAAA/AAAAeAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAB4AAAA8=
</value>
  </data>
</root>